version: "2"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2182:2182"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "approval_topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: "redis:alpine"
    command: redis-server
  db:
    image: postgres:10.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  approval_service_server:
    build: ./server_be
    environment:
      - FLASK_APP=run.py
      - SECRET_KEY=fiudh9eb439b9854b4598459598j54u8d4378
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db:5432/postgres
      - ENVIROMENT=production
      - BROKER_URI=kafka:9092
      - SERVICE_KAFKA_TOPIC=approval_topic
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - APP_PORT=5000

    command: bash -c "python manage.py db upgrade && supervisord -c tools/supervisor/celeryd.conf && python run.py"
    volumes:
      - server_be_logs:/var/log/approval_service/
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - db
      - kafka
  approval_service_client:
    build: ./client_fe
    ports:
      - "3500:3500"
volumes:
  postgres_data:
  server_be_logs:
